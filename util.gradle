import java.util.regex.Pattern

apply plugin: 'org.quanqi.pgyer'

def propertyFilePath = './gradle.properties';

task bumpAppUser {
    doLast {
        println 'start to update app user version'
        def newVersionName = bumpVersionName(APP_USER_VERSION_NAME, rtype);
        def newVersionCode = bumpVersionCode(APP_USER_VERSION_CODE);
        def fileContent = readFile(propertyFilePath);
        def newContent = replaceValue(fileContent, 'APP_USER_VERSION_NAME', newVersionName);
        newContent = replaceValue(newContent, 'APP_USER_VERSION_CODE', newVersionCode);
        write2File(propertyFilePath, newContent);
        println 'end update app user version'
    }
}

bumpAppUser.shouldRunAfter {
    getAllAssembleTask(':app_user');
}

task bumpAppDesigner {
    doLast {
        def newVersionName = bumpVersionName(APP_DESIGNER_VERSION_NAME, rtype);
        def newVersionCode = bumpVersionCode(APP_DESIGNER_VERSION_CODE);
        def fileContent = readFile(propertyFilePath);
        def newContent = replaceValue(fileContent, 'APP_DESIGNER_VERSION_NAME', newVersionName);
        newContent = replaceValue(newContent, 'APP_DESIGNER_VERSION_CODE', newVersionCode);
        write2File(propertyFilePath, newContent);
    }
}

bumpAppDesigner.shouldRunAfter {
    getAllAssembleTask(':app_designer');
}

task bumpAppSupervisor {
    doLast {
        def newVersionName = bumpVersionName(APP_SUPERVISOR_VERSION_NAME, rtype);
        def newVersionCode = bumpVersionCode(APP_SUPERVISOR_VERSION_CODE);
        def fileContent = readFile(propertyFilePath);
        def newContent = replaceValue(fileContent, 'APP_SUPERVISOR_VERSION_NAME', newVersionName);
        newContent = replaceValue(newContent, 'APP_SUPERVISOR_VERSION_CODE', newVersionCode);
        write2File(propertyFilePath, newContent);
    }
}

bumpAppSupervisor.shouldRunAfter {
    getAllAssembleTask(':app_supervisor');
}

def String bumpVersionName(String name, String type) {
    def patternVersionNumber = Pattern.compile("(\\d+)\\.(\\d+)\\.(\\d+)");
    def matcherVersionNumber = patternVersionNumber.matcher(name);
    matcherVersionNumber.find();
    def majorVersion = Integer.parseInt(matcherVersionNumber.group(1));
    def minorVersion = Integer.parseInt(matcherVersionNumber.group(2));
    def pointVersion = Integer.parseInt(matcherVersionNumber.group(3));
    if (type.equals('a')) {
        majorVersion = majorVersion + 1;
    } else if (type.equals('b')) {
        minorVersion = minorVersion + 1;
    } else {
        pointVersion = pointVersion + 1;
    }

    def versionName = majorVersion + '.' + minorVersion + '.' + pointVersion;

    println versionName;
    return versionName;
}

def String bumpVersionCode(String code) {
    def newCode = Integer.parseInt(code) + 1;
    return newCode + '';
}

def replaceValue(String text, String key, String value) {
    def newStr = text.replaceFirst(key + '[^\\n]*\\n', key + ' = ' + value + '\n');

    return newStr;
}

def String readFile(String filename) {
    def f = file(filename);
    return f.getText();
}

def write2File(String filename, String content) {
    def f = file(filename);
    f.write(content);
}

def Set getAllAssembleTask(String projectName) {
    def p = project.findProject(projectName);
    p.tasks.findAll {
        task -> task.name.startsWith('assemble')
    }
}

def String getApkName(String app, String force_update, String versionCode, String versionName) {
    def date = new Date().format('yyyyMMdd');
    return app + '_' + date + '_' + force_update + '_' + versionCode + '_' + versionName + '.apk';
}

def String getApkPath(String versionName, String apkName) {
    return project.rootProject.path + '/' + APK_DIR + '/' + versionName +'/'+ apkName;
}

//For pgy
pgyer {
    _api_key = "23753123eeee6bb7b1645ae8b349f5f3"
    uKey = "75a553da1e363a4e3d0d6352c47f03b9"
}

apks {
//    supervisor {
//        sourceFile = file("G:\\test_apks\\supervisor_1.0.3\\supervisor-Defalut-andtest_20160425_0_3_1.0.3.apk")
//    }
//    user {
//        sourceFile = file("G:\\test_apks\\user_2.6.3\\jianfanjia-Default-andtest_20160425_0_73_2.6.3.apk")
//    }
//    designer {
//        sourceFile = file("G:\\test_apks\\designer_2.6.3\\designer-Default-andtest_20160425_0_73_2.6.3.apk")
//    }
}



